plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
    id 'org.jetbrains.dokka' version '2.0.0'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'com.butter.mas'
version = '2.0'

repositories {
    mavenCentral()
}

configurations {
    dokka
}

dependencies {
    dokka "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.jetbrains:annotations:24.1.0'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

kotlin {
    jvmToolchain(17)
}

javadoc {
    options.addBooleanOption('html5', true)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'mas-api'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Butter MAS Java API'
                description = 'Java API for Butter Robotics MAS platform'
                url = 'http://www.butterrobotics.com/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'bennymeg'
                        name = 'Benny Megidish'
                        email = 'butter.robotics@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/butter-robotics/Butter.MAS.Java.API'
                    connection = 'scm:git:git://github.com/butter-robotics/Butter.MAS.Java.API.git'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

//signing {
//    sign publishing.publications.mavenJava
//}